---
source: compiler-core/src/fsharp/tests/records.rs
expression: "\npub type Person {\n    Teacher(name: String, age: List(Int), title: String)\n    Student(name: String, age: List(Int))\n}\npub fn get_name(person: Person) { person.name }\npub fn get_age(person: Person) { person.age }"
---
module rec my.``mod``
type Person =
| Student of name: string * age: list<int64>
| Teacher of name: string * age: list<int64> * title: string
    member this.age = 
        match this with
        | Person.Student (_, age) -> age
        | Person.Teacher (_, age, _) -> age
    member this.name = 
        match this with
        | Person.Student (name, _) -> name
        | Person.Teacher (name, _, _) -> name
let get_name (person: Person) = begin
    person.name
end
let get_age (person: Person) = begin
    person.age
end
