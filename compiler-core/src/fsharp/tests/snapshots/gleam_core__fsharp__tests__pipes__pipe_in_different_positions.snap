---
source: compiler-core/src/fsharp/tests/pipes.rs
expression: "\nfn and(a, b) {\n  a && b\n}\n\nfn is_false(a) {a}\n\npub fn something() {\n\n  False\n  |> and(True, _)\n  |> is_false\n}\n"
---
module rec my.``mod``
let private ``and`` (a: bool) (b: bool) = begin
    a && b
end
let private is_false (a: 'u11) = begin
    a
end
let something () = begin
    begin
        let _pipe = false
        let _pipe = 
            (fun(_capture: bool) -> begin 
                ``and`` (true) (_capture)
            end) (_pipe)
        (is_false (_pipe))
    end
end
