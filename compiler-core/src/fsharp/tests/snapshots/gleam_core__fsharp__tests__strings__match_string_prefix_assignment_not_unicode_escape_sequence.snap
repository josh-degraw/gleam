---
source: compiler-core/src/fsharp/tests/strings.rs
expression: "\npub fn go(x) {\n  let _ = case x {\n    \"\\\\u{9}\" as start <> rest -> \"test\"\n    \"\\\\u{000009}\" as start <> rest -> \"test\"\n    \"\\\\u{21}\" as start <> rest -> \"test\"\n    \"\\\\u{100}\" as start <> rest -> \"test\"\n    \"\\\\u{1000}\" as start <> rest -> \"test\"\n    \"\\\\u{1F600}\" as start <> rest -> \"test\"\n    \"\\\\u{1f600}\" as start <> rest -> \"test\"\n    \"\\\\u{01F600}\" as start <> rest -> \"test\"\n    \"\\\\u{01f600}\" as start <> rest -> \"test\"\n    \"\\\\u{9} \\\\u{000009} \\\\u{21} \\\\u{100} \\\\u{1000} \\\\u{1F600} \\\\u{01F600}\" as start <> rest -> \"test\"\n    _ -> \"Unknown\"\n  }\n}\n"
---
module rec my.``mod``

let go (x: string) = begin
    let _ =
        match x with
        | Gleam_codegen_string_parts "\\u{9}" (start, rest) ->
            "test"
        | Gleam_codegen_string_parts "\\u{000009}" (start, rest) ->
            "test"
        | Gleam_codegen_string_parts "\\u{21}" (start, rest) ->
            "test"
        | Gleam_codegen_string_parts "\\u{100}" (start, rest) ->
            "test"
        | Gleam_codegen_string_parts "\\u{1000}" (start, rest) ->
            "test"
        | Gleam_codegen_string_parts "\\u{1F600}" (start, rest) ->
            "test"
        | Gleam_codegen_string_parts "\\u{1f600}" (start, rest) ->
            "test"
        | Gleam_codegen_string_parts "\\u{01F600}" (start, rest) ->
            "test"
        | Gleam_codegen_string_parts "\\u{01f600}" (start, rest) ->
            "test"
        | Gleam_codegen_string_parts "\\u{9} \\u{000009} \\u{21} \\u{100} \\u{1000} \\u{1F600} \\u{01F600}" (start, rest) ->
            "test"
        | _ ->
            "Unknown"
    _
end
